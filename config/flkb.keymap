#include <behaviors/mouse_keys.dtsi>
#include <behaviors/layer_mouse.dtsi>
#include <behaviors.dtsi>
#include <rl.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>


&lt {
  tapping-term-ms = <200>;
  quick_tap_ms = <200>;
  flavor = "hold-preferred";
};

/ {

  combos {
	  compatible = "zmk,combos";
	  combo_gaming {
		timeout-ms = <50>;
		key-positions = <9 19 29>;
		bindings = <&tog 8>;
		slow-release;
	  };

	  combo_esc {
		  timeout-ms = <50>;
		  key-positions = <12 13>;
		  bindings = <&kp ESC>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_ent {
		  timeout-ms = <50>;
		  key-positions = <13 24>;
		  bindings = <&kp RET>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_bksp {
		  timeout-ms = <50>;
		  key-positions = <10 20>;
		  bindings = <&kp BKSP>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

/*
	  combo_colemak {
		  timeout-ms = <50>;
		  key-positions = <5 25>;
		  bindings = <&tog 4>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };
*/

	  // home row combos

	  // left side

	  combo_lhome_alt {
		  timeout-ms = <50>;
		  key-positions = <34 13>;
		  bindings = <&kp LALT>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_lhome_altgui {
		  timeout-ms = <50>;
		  key-positions = <34 12 13>;
		  bindings = <&kp LA(LGUI)>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_lhome_altctl {
		  timeout-ms = <50>;
		  key-positions = <34 11 13>;
		  bindings = <&kp LA(LCTL)>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_lhome_altguictl {
		  timeout-ms = <50>;
		  key-positions = <34 11 12 13>;
		  bindings = <&kp LA(LG(LCTRL))>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_lhome_gui {
		  timeout-ms = <50>;
		  key-positions = <34 12>;
		  bindings = <&kp LGUI>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_lhome_guictl {
		  timeout-ms = <50>;
		  key-positions = <34 11 12>;
		  bindings = <&kp LG(LCTRL)>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_lhome_ctl {
		  timeout-ms = <50>;
		  key-positions = <34 11>;
		  bindings = <&kp LCTRL>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  // right side

	  combo_rhome_alt {
		  timeout-ms = <50>;
		  key-positions = <35 16>;
		  bindings = <&kp RALT>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_rhome_altgui {
		  timeout-ms = <50>;
		  key-positions = <35 17 16>;
		  bindings = <&kp RA(RGUI)>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_rhome_altctl {
		  timeout-ms = <50>;
		  key-positions = <35 18 16>;
		  bindings = <&kp RA(RCTL)>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_rhome_altguictl {
		  timeout-ms = <50>;
		  key-positions = <35 18 17 16>;
		  bindings = <&kp RA(RG(RCTRL))>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_rhome_gui {
		  timeout-ms = <50>;
		  key-positions = <35 17>;
		  bindings = <&kp RGUI>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_rhome_guictl {
		  timeout-ms = <50>;
		  key-positions = <35 18 17>;
		  bindings = <&kp RG(RCTRL)>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_rhome_ctl {
		  timeout-ms = <50>;
		  key-positions = <35 18>;
		  bindings = <&kp RCTRL>;
		  slow-release;
		  layers = <0 1 2 3 4 5 6 7>;
	  };

	  combo_lalt {
		   timeout-ms = <50>;
		   key-positions = <1 12>;
		   bindings = <&kp LALT>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_lgui {
		   timeout-ms = <50>;
		   key-positions = <1 13>;
		   bindings = <&kp LGUI>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_lctl {
		   timeout-ms = <50>;
		   key-positions = <2 13>;
		   bindings = <&kp LCTL>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_ralt {
		   timeout-ms = <50>;
		   key-positions = <8 17>;
		   bindings = <&kp RALT>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_rgui {
		   timeout-ms = <50>;
		   key-positions = <8 16>;
		   bindings = <&kp RGUI>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_rctl {
		   timeout-ms = <50>;
		   key-positions = <7 16>;
		   bindings = <&kp RCTL>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_laltgui {
		   timeout-ms = <50>;
		   key-positions = <11 2 3>;
		   bindings = <&kp LA(LGUI)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_laltctl {
		   timeout-ms = <50>;
		   key-positions = <1 12 3>;
		   bindings = <&kp LA(LCTL)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_lguictl {
		   timeout-ms = <50>;
		   key-positions = <1 2 13>;
		   bindings = <&kp LG(LCTL)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_raltgui {
		   timeout-ms = <50>;
		   key-positions = <6 7 18>;
		   bindings = <&kp RA(RGUI)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_raltctl {
		   timeout-ms = <50>;
		   key-positions = <6 17 8>;
		   bindings = <&kp RA(RCTL)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
	   combo_rguictl {
		   timeout-ms = <50>;
		   key-positions = <16 7 8>;
		   bindings = <&kp RG(RCTL)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };


	   combo_ctl_w {
		   timeout-ms = <50>;
		   key-positions = <34 10>;
		   bindings = <&kp LC(W)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_ctl_s {
		   timeout-ms = <50>;
		   key-positions = <34 20>;
		   bindings = <&kp LC(S)>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_hyper_lt {
		   timeout-ms = <30>;
		   key-positions = <34 0>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_hyper_rt {
		   timeout-ms = <30>;
		   key-positions = <35 9>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_hyper_l {
		   timeout-ms = <30>;
		   key-positions = <21 22>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_hyper_r {
		   timeout-ms = <30>;
		   key-positions = <27 28>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_mb1_r {
		   timeout-ms = <50>;
		   key-positions = <28 29>;
		   bindings = <&mkp LCLK>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_mb2_r {
		   timeout-ms = <50>;
		   key-positions = <28 19>;
		   bindings = <&mkp RCLK>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };

	   combo_mb3_r {
		   timeout-ms = <50>;
		   key-positions = <19 29>;
		   bindings = <&mkp MCLK>;
		   slow-release;
		   layers = <0 1 2 3 4 5 6 7>;
	   };
};

  keymap {
        compatible = "zmk,keymap";

        default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I    &kp O   &kp P
		&kp A &kp S &kp D &kp F &kp G 			        	        &kp H &kp J &kp K &kp L &kp SCLN
		&mt LSFT FSLH &kp Z &kp X &kp C &kp V 				        &kp B &kp N &kp M  &kp CMMA &mt LSFT DOT
		&trans &trans		&lm 6 LCLK &lt 1 SPC &lt 3 TAB   			&lt 2 BKSP &kp RET 
		>;
	};

	left_layer {
		bindings = <
		&kp F1    &kp F2        &kp F3      &kp F4        &kp F5		&kp F6     &kp F7  &kp F8   &kp F9     &kp F10
		&kp N1    &kp N2        &kp N3      &kp N4        &kp N5		&kp N6     &kp N7  &kp N8   &kp N9     &kp N0
		&kp F11    &kp F12 	&kp F13     &kp F14       &kp F15        	&kp MINUS  &trans  &trans   &trans     &trans
		&trans &trans			   &trans &mo 1  &mo 5  					&trans &trans 
		>;
	};

	right_layer {
		bindings = <
		&kp GRAVE  &kp LBKT &kp RBKT  &kp DLLR  &kp TILDE    			&kp AMPS  &kp KMLT &kp LPRN &kp RPRN &kp DEL
		&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCT 			&kp CARET &kp AMPS  &kp STAR  &kp MINUS   &kp EQUAL
		&kp QMARK  &kp DQT &kp BKSP &kp BKSP   &kp BKSP    			&kp BKSP &kp BKSP &kp UNDER &kp SQT  &mt RSFT BSLH
		&trans &trans			&trans &trans &trans  				&kp SPC  &mo 5 
		>;
	};

	tri_layer {
		bindings = <
		&kp DEL  &kp PG_DN   &kp UP   &kp PG_UP &kp CAPS			&trans &kp PG_DN   &kp UP   &kp PG_UP  &kp DEL
		&kp HOME &kp LEFT  &kp DOWN &kp RIGHT &kp END				&kp HOME &kp LEFT  &kp DOWN &kp RIGHT &kp END 
		&mo 7  &kp K_VOL_DN &kp K_MUTE &kp K_VOL_UP &trans  		&trans &trans &trans &trans &trans   
		&trans &trans			 &trans &trans   				&trans &trans &trans
		>;
	};

	quad_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B 						&kp J &kp L  &kp U    &kp Y   &kp SCLN
		&kp A &kp R &kp S &kp T &kp G 			        	        &kp M &kp N &kp E &kp I &kp O
		&mt LSFT Z &kp X &kp C &kp D &kp V 				        &kp K &kp H &kp CMMA &kp DOT &mt LSFT FSLH
		&trans &trans			&trans &lt 1 SPC &lt 3 TAB  				&lt 2 BKSP &kp RET 
		>;
	};
	bt_layer {
		bindings = <
		&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0
		&bt BT_SEL 5 &bt BT_SEL 6 &bt BT_SEL 7 &bt BT_SEL 8 &bt BT_SEL 9        &bt BT_SEL 9 &bt BT_SEL 8 &bt BT_SEL 7 &bt BT_SEL 6 &bt BT_SEL 5
		&bt BT_CLR  &trans &sys_reset &out OUT_USB &out OUT_BLE        &sys_reset &trans &trans &trans &bt BT_CLR
		&trans &trans			&trans &bootloader &trans  				&bootloader &bootloader
		>;
	};
	mouse_layer {
		bindings = <
		&trans &mkp MB4 &mmv MOVE_UP &mkp MB5 &trans        		&trans &mkp MB4 &mmv MOVE_UP &mkp MB5 &trans
		&trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans     &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans
		&trans &mkp LCLK &mkp MCLK &mkp RCLK &trans        		&trans &mkp LCLK &mkp MCLK &mkp RCLK &trans
          	&trans &trans &trans			&trans &trans  				&trans &trans
		>;
	};	
	rl_layer {
		bindings = <
		&trans &trans &freelo &trans &trans        		&trans &trans &trans &oderwas &trans
		&trans &trans &trans &fatmom &trans        		&trans &trans &trans &trans &trans
		&trans &trans &trans &cry &trans        		&brothers &trans &trans &trans &trans
          	&trans &trans &trans			&trans &trans  				&trans &trans
		>;
	};	
        gaming_layer {
		bindings = <
		&kp Q    &kp W &kp E &kp R &kp T 				&kp Y &kp U &kp I  &kp O    &kp P
		&kp A    &kp S &kp D &kp F &kp G 			       	&kp H &kp J &kp K  &kp L    &kp SCLN
		&kp FSLH &kp Z &kp X &kp C &kp V 			        &kp B &kp N &kp M  &kp CMMA &kp DOT
		&trans &trans		&mkp LCLK &kp SPC &kp TAB   		&kp BKSP &kp RET 
		>;
	};
    };
};
